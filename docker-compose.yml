
services:
  my-next-app:
    build:
      context: ./my-next-app
      dockerfile: Dockerfile
    image: my-next-app
    container_name: my-app-container
    ports:
      - "8080:3000"
    # volumes:
    #   - ${IMAGE_HOST_STORAGE_PATH_ON_HOST}:/app/mounted_images
    depends_on:
      - mysqlDB
    networks:
      - my_blog_network
    environment:
      - IMAGE_HOST_STORAGE_PATH=/app/mounted_images
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ${IMAGE_HOST_STORAGE_PATH_ON_HOST}:/app/mounted_images

  mysqlDB:
    image: mysql:8.0
    container_name: my-sql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    ports:
      - "3307:3306"
    volumes:
      - mysql_blog_data:/var/lib/mysql
    networks:
      - my_blog_network

  python-script:
    build:
      context: ./python-GetNotionData
      dockerfile: Dockerfile
    environment:
      - NOTION_API_KEY=${NOTION_API_KEY}
      - NOTION_DATABASE_ID=${NOTION_DATABASE_ID}
      - DB_HOST=mysqlDB
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - IMAGE_HOST_STORAGE_PATH=/app/mounted_images
    volumes:
      - ${IMAGE_HOST_STORAGE_PATH_ON_HOST}:/app/mounted_images
    depends_on:
      - mysqlDB
    networks:
      - my_blog_network

# Docker 네트워크 정의
networks:
  my_blog_network:
    driver: bridge
    
volumes:
  mysql_blog_data:

